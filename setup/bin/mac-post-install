#!/usr/bin/env bash

set -euxo pipefail

current_dir="$(dirname "$(readlink -f "${BASH_SOURCE[0]}")")"

source "${current_dir}/../lib/utils.sh"

log 'installing homebrew'

if [[ ! -x "$(command -v brew)" ]]; then
  /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"

  eval "$(/opt/homebrew/bin/brew shellenv)"
fi

log 'installing homebrew stuff'

brew update
brew install bash

hostname="$(hostname)"
# brew_formulae_file="${current_dir}/../../hosts/${hostname}.d/brew/formulae"
brewfile="${current_dir}/../../hosts/${hostname}.d/Brewfile"

# mapfile -t brew_formulae < <(cat "${brew_formulae_file}")

brew bundle install --file "${brewfile}"

brew install "${brew_formulae[@]}"

# log 'installing mac app store apps'

#mac_store_apps=(
#  'Telegram'
#  'Slack'
#  'Amphetamine'
#  #'Key Codes'
#  #'Microsoft To Do'
#  #'Daisy Disk'
#  #'Pixelmator'
#  'Shazam'
#)

for appname in "${mac_store_apps[@]}"; do
  log "Installing ${appname}"
  mas search "${appname}" | head -n 1 | grep -Eo '\d+' | head -n 1 | xargs mas install
done

log 'letting the system know homebrew-installed zsh'

if ! grep zsh /etc/shells; then
  zsh_bin="/usr/bin/local/zsh"

  log "appending ${zsh_bin} to /etc/shells"

  echo "${zsh_bin}" | sudo tee -a /etc/shells > /dev/null

  chsh -s "${zsh_bin}"
fi

# set mac defaults

# Enables text selection on QuickLook
defaults write com.apple.finder QLEnableTextSelection -bool true

# Reveal IP address, hostname, OS version, etc. when clicking the clock
# in the login window
sudo defaults write /Library/Preferences/com.apple.loginwindow AdminHostInfo HostName

# Restart automatically if the computer freezes
sudo systemsetup -setrestartfreeze on

# Avoid creating .DS_Store files on network volumes
defaults write com.apple.desktopservices DSDontWriteNetworkStores -bool true

# Enable full keyboard access for all controls
# (e.g. enable Tab in modal dialogs)
defaults write NSGlobalDomain AppleKeyboardUIMode -int 3

# Automatically illuminate built-in MacBook keyboard in low light
defaults write com.apple.BezelServices kDim -bool true


asdf plugin add ruby
asdf plugin add nodejs
asdf plugin add java
asdf plugin add cloure
