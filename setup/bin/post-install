#!/usr/bin/env bash

set -euxo pipefail

current_dir="$(dirname "$(readlink -f "${BASH_SOURCE[0]}")")"

source "${current_dir}/../lib/utils.sh"

ditmas_dir="${HOME}/.ditmas"

function os_post_install {
  local os_post_install_script
  os_post_install_script=$(case-linux-mac "${current_dir}/linux-post-install" "${current_dir}/mac-post-install")

  "$os_post_install_script"
}

function setup_asdf {
  asdf plugin add ruby
  asdf plugin add nodejs
  asdf plugin add java
  asdf plugin add cloure
  asdf plugin add babashka

  asdf install
}


function clear_dotfiles_and_dotdirs {
  find "${HOME}" -maxdepth 1 -iname '.*' -exec rm -rf '{}' \;
}

function setup_xdg_dirs {
  mkdir -p ~/.local/bin
  mkdir -p ~/.local/share
}

function setup_personal_src_dir {
  local src_dir="${HOME}/Sources"
  local personal_src_dir="${src_dir}/fuadsaud"

  mkdir -p "${personal_src_dir}"

  lns-once "${ditmas_dir}" "${personal_src_dir}/ditmas"

  if [[ ! -d "$personal_src_dir/qmk_firmware" ]]; then
    git clone https://github.com/fuadsaud/qmk_firmware.git "$personal_src_dir/qmk_firmware"
  fi
}

function setup_ditmas {
  local repo_url="https://github.com/fuadsaud/ditmas"

  rm -rf "${ditmas_dir}"

  git clone --recurse-submodules -j8 "${repo_url}" "${ditmas_dir}"

  export PATH="$PATH:"

  DITMAS_DIR="${ditmas_dir}" "${ditmas_dir}/stow/dmutils/.local/bin/dsync" --override '.*'
}

function setup_vim {
  curl -fLo "${HOME}/.vim/autoload/plug.vim" --create-dirs \
    https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim

  vim +PlugInstall +qall
}

function setup_neovim {
  curl -fLo "${HOME}/.local/share/nvim/site/autoload/plug.vim" --create-dirs \
    https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim

  nvim +PlugInstall +qall
}

os_post_install
clear_dotfiles_and_dotdirs
setup_xdg_dirs
setup_ditmas
setup_personal_src_dir
setup_vim
setup_neovim

log 'post installation finished'
